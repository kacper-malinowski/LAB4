@page "/songs/create"
@inject BlazorApp1.Data.ApplicationDbContext DB
@using BlazorApp1
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Song</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Song" OnValidSubmit="AddSong" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="songtitle" class="form-label">SongTitle:</label> 
                <InputText id="songtitle" @bind-Value="Song.SongTitle" class="form-control" /> 
                <ValidationMessage For="() => Song.SongTitle" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="songartist" class="form-label">SongArtist:</label> 
                <InputText id="songartist" @bind-Value="Song.SongArtist" class="form-control" /> 
                <ValidationMessage For="() => Song.SongArtist" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="releasedate" class="form-label">ReleaseDate:</label> 
                <InputDate id="releasedate" @bind-Value="Song.ReleaseDate" class="form-control" /> 
                <ValidationMessage For="() => Song.ReleaseDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="url" class="form-label">Url:</label>
                <InputText id="url" @bind-Value="Song.Url" class="form-control" />
                <ValidationMessage For="() => Song.Url" class="text-danger" />
            </div>

            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/songs">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public Song Song { get; set; } = new Song();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddSong()
    {
        Song.RatingCount = 0;
        Song.Rating = 0;
        DB.Song.Add(Song);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/songs");
    }
}
